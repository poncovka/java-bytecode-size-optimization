package jbyco.analyze.patterns.instr;

public class Instruction {
	
	// the level of opcode abstraction
	static int abstraction = 0;
	
	// abstraction of opcode
	int operation;
	
	// parameters of the instruction
	Object[] params;
	
	static public void setAbstractionLevel(int level) {
		abstraction = level;
	}	
	
	public Instruction(int opcode, Object[] params) {
		this.operation = opcodeToOpcode(opcode);
		this.params = params;
	}
	
	static private int opcodeToOpcode(int opcode) {
		return 0;
	}
	
	static private String opcodeToString(int opcode) {
		return "I";
	}
	
	@Override
	public String toString() {
		return super.toString();
	}
	
	enum OperationGroup {
		NOP,
		CONST,
	    LOAD,
	    ALOAD,
	    STORE,
	    ASTORE,
	    POP,
	    DUP,
	    DUP_X1,
	    DUP_X2,
	    SWAP,
	    ADD,
	    SUB,
	    MUL,
	    DIV,
	    REM,
	    NEG,
	    SHL,
	    SHR,
	    USHR,
	    AND,
	    OR,
	    XOR,
	    INC,
	    CONVERT,
	    CMP,
	    IFEQ,
	    IFNE,
	    IFLT,
	    IFGE,
	    IFGT,
	    IFLE,
	    IF_CMPEQ,
	    IF_CMPNE,
	    IF_CMPLT,
	    IF_CMPGE,
	    IF_CMPGT,
	    IF_CMPLE,
	    GOTO,
	    JSR,
	    RET,
	    TABLESWITCH,
	    LOOKUPSWITCH,
	    RETURN,
	    GETSTATIC,
	    PUTSTATIC,
	    GETFIELD,
	    PUTFIELD,
	    INVOKEVIRTUAL,
	    INVOKESPECIAL,
	    INVOKESTATIC,
	    INVOKEINTERFACE,
	    INVOKEDYNAMIC,
	    NEW,
	    NEWARRAY,
	    ARRAYLENGTH,
	    ATHROW, 
	    CHECKCAST, 
	    INSTANCEOF, 
	    MONITORENTER, 
	    MONITOREXIT,
	    IFNULL,
	    IFNONNULL; 
	}
	
	enum Operation {
		NOP,
		ACONST,
		ICONST,
	    LCONST,
	    FCONST,
	    DCONST,
	    BIPUSH,
	    SIPUSH,
	    LDC,
	    ILOAD,
	    LLOAD,
	    FLOAD,
	    DLOAD,
	    ALOAD,
	    IALOAD,
	    LALOAD,
	    FALOAD,
	    DALOAD,
	    AALOAD,
	    BALOAD,
	    CALOAD,
	    SALOAD,
	    ISTORE,
	    LSTORE,
	    FSTORE,
	    DSTORE,
	    ASTORE,
	    IASTORE,
	    LASTORE,
	    FASTORE,
	    DASTORE,
	    AASTORE,
	    BASTORE,
	    CASTORE,
	    SASTORE,
	    POP,
	    POP2,
	    DUP,
	    DUP_X1,
	    DUP_X2,
	    DUP2,
	    DUP2_X1,
	    DUP2_X2,
	    SWAP,
	    IADD,
	    LADD,
	    FADD,
	    DADD,
	    ISUB,
	    LSUB,
	    FSUB,
	    DSUB,
	    IMUL,
	    LMUL,
	    FMUL,
	    DMUL,
	    IDIV,
	    LDIV,
	    FDIV,
	    DDIV,
	    IREM,
	    LREM,
	    FREM,
	    DREM,
	    INEG,
	    LNEG,
	    FNEG,
	    DNEG,
	    ISHL,
	    LSHL,
	    ISHR,
	    LSHR,
	    IUSHR,
	    LUSHR,
	    IAND,
	    LAND,
	    IOR,
	    LOR,
	    IXOR,
	    LXOR,
	    IINC,
	    I2L,
	    I2F,
	    I2D,
	    L2I,
	    L2F,
	    L2D,
	    F2I,
	    F2L,
	    F2D,
	    D2I,
	    D2L,
	    D2F,
	    I2B,
	    I2C,
	    I2S,
	    LCMP,
	    FCMPL,
	    FCMPG,
	    DCMPL,
	    DCMPG,
	    IFEQ,
	    IFNE,
	    IFLT,
	    IFGE,
	    IFGT,
	    IFLE,
	    IF_ICMPEQ,
	    IF_ICMPNE,
	    IF_ICMPLT,
	    IF_ICMPGE,
	    IF_ICMPGT,
	    IF_ICMPLE,
	    IF_ACMPEQ,
	    IF_ACMPNE,
	    GOTO,
	    JSR,
	    RET,
	    TABLESWITCH,
	    LOOKUPSWITCH,
	    IRETURN,
	    LRETURN,
	    FRETURN,
	    DRETURN,
	    ARETURN,
	    RETURN,
	    GETSTATIC,
	    PUTSTATIC,
	    GETFIELD,
	    PUTFIELD,
	    INVOKEVIRTUAL,
	    INVOKESPECIAL,
	    INVOKESTATIC,
	    INVOKEINTERFACE,
	    INVOKEDYNAMIC,
	    NEW,
	    NEWARRAY,
	    ANEWARRAY,
	    ARRAYLENGTH,
	    ATHROW, 
	    CHECKCAST, 
	    INSTANCEOF, 
	    MONITORENTER, 
	    MONITOREXIT, 
	    MULTIANEWARRAY,
	    IFNULL,
	    IFNONNULL; 
	}
	
	

}
